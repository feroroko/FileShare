<script src="<%= request.mainURL %>/public/js/jquery.min.js"></script>
<script src="<%= request.mainURL %>/public/js/popper.min.js"></script>
<script src="<%= request.mainURL %>/public/js/bootstrap.min.js"></script>
<script src="<%= request.mainURL %>/public/js/sweetalert.min.js"></script>
<script src="<%= request.mainURL %>/public/js/sweetalert2.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.6.0/js/bootstrap.bundle.min.js"></script>




<script>

    // send the request to server to download the file
    function downloadFile(self) {
        let _id = self.getAttribute("data-id");

        self.innerHTML = "Loading...";
        self.setAttribute("disabled", "disabled");

        let ajax = new XMLHttpRequest();
        ajax.open("post", document.getElementById('base-url').value + "/DownloadFile", true);

        ajax.onreadystatechange = function () {
           if (this.readyState == 4) {
              if (this.status == 200) {
                   let data = JSON.parse(this.responseText);

                    self.removeAttribute("disabled");
                    self.innerHTML = "Download";

                    if (data.status == "error") {
                        Swal.fire("Error", data.message, "error");
                    } 

                    if (data.status == "Success") {

                        // response will be a buffer arrau
                        // vonver that into base64

                        let binary = '';
                        let bytes = new Uint8Array( data.arrayBuffer.data);

                        let len = bytes.byteLength;
                        for (let i = 0; i < len; i++) {
                            binary += String.fromCharCode( bytes[ i] );
                        }
                        let base64 = window.btoa( binary);
                        base64 = "data:" + data.fileType + ";base64," + base64;
                    

                        // download the file
                        const fileName = data.fileName;
                        const link = document.createElement('a');
                        // browsers that support HTML5 download attribute
                        if (link.download !== undefined) {
                            link.setAttribute("href", base64); 
                            link.setAttribute('download', fileName);
                            link.style.visibility = 'hidden';
                            document.body.appendChild(link);
                            link.click();
                            document.body.removeChild(link);
                        }
                    } 
                } 

                if (this.status == 500) {
                    console.log(this.responseText);
                }
            }
        };

        let formData = new FormData();
        formData.append("_id", _id);
        ajax.send(formData);
    }
    


    function confirmDeleteFile() {
        Swal.fire({
            title: "Are you sure?",
            text: "Once deleted, you will not be able to recover this file!!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#d33",
            confirmButtonText: "Delete",
            cancelButtonText: "Cancel"
        }).then((result) => {
            if (result.isConfirmed) {
                document.getElementById("form-delete-file").submit();
            }
        });
    }
</script>


</body>
</html>
